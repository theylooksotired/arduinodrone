{
  "name": "cornerstone",
  "main": "lib/index.js",
  "author": {
    "name": "Roland Poulter"
  },
  "version": "0.1.0",
  "keywords": [],
  "homepage": "https://github.com/rolandpoulter/cornerstone",
  "repository": {
    "type": "git",
    "url": "git://github.com/rolandpoulter/cornerstone.git"
  },
  "description": "Cross platform JavaScript utilities, event emitter and class constructor.",
  "contributors": [],
  "dependencies": {},
  "devDependencies": {
    "modulator": "x",
    "quiz": "x"
  },
  "readme": "# cornerstone\n\nCross platform JavaScript utilities, event emitter and class constructor.\n\n\tvar cornerstone = require('cornerstone').require('index');\n\tappCore.util.idle();\n\n### util\n\nCommon utilities for type checking, invocation, enumeration, random, and assignment.\n\n\tvar util = require('cornerstone').require('util');\n\tutil.enumerate(obj, function (val, key) {\n\t\tif (val) array.push(val);\n\t});\n\n### Class\n\nCombines prototypal inheritance and module design patterns into a hybrid Class solution.\n\n\tvar core = require('cornerstone'),\n\t    Class = core.require('Class'),\n\t    Emitter = core.require('Emitter');\n\tvar Flight = new Class('Flight', function (obj, proto) {\n\t\tobj.fly = function () {\n\t\t\tthis.isFlying = true;\n\t\t\treturn this;\n\t\t};\n\t\tobj.land = function () {\n\t\t\tdelete this.isFlying;\n\t\t\treturn this;\n\t\t};\n\t});\n\tvar Animal = new Class('Animal', Emitter, function (obj, supr, proto) {\n\t\tobj.initAnimal = function (name) {\n\t\t\tthis.name = name;\n\t\t\treturn this.initEmitter();\n\t\t};\n\t});\n\tvar FlyingAnimal = Animal.extend('FlyingAnimal', function (obj, supr, proto) {\n\t\tif (!Flight.check(obj)) {\n\t\t\tFlight.create(obj);\n\t\t}\n\t});\n\tvar bird = new FlyingAnimal('bird').fly().land();\n\tFlight.check(bird) && Animal.check(bird) && FlyingAnimal.check(bird); //true\n\n### Emitter\n\nCross platform event emitter implementation plus some extras.\n\n\tvar Emitter = require('cornerstone').require('Emitter');\n\tvar events = new Emitter();\n\tevents.on('apocalypse', function () {\n\t\tconsole.log('It\\'s the end');\n\t});\n\tevents.forever('apocalypse');\n\n## Installation\n\n\t$ npm install cornerstone\n\n## Running Tests\n\n\t$ node test\n\n## MIT License \n\nCopyright (C) 2011 by Roland Poulter\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/rolandpoulter/cornerstone/issues"
  },
  "_id": "cornerstone@0.1.0",
  "_from": "cornerstone@x"
}
